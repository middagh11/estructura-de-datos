#include "stdafx.h"
#include "Fecha.h"
#include "iostream"
#include <string>
#include "conio.h"
utilizando namespace std;
vacío principal()
{
	cadena f1;
    banda bool;
	int opc;
	hacer{
	cout << "Seleccione el formato de fecha que desea ingresar" << endl;
	cout << "[1] Formato dia / mes / anio" << endl;
	cout << "[2] Formato diamesanio" << endl;
	cout << "[3] Ingresar por separado dia, mes, anio" << endl;
	cout << "Elija la opcion que prefiera:" << endl;
	cin >> opc;
	cout << endl;
	if (opc <1 || opc> 3) {
		cout << "Opcion no valida" << endl;
	}
	} while (opc <1 || opc> 3);
	interruptor (opc)
	{caso 1:
	   
		cout << "Ingrese la fecha (dia / mes / anio):";
		getline (cin, f1);
		/ * Fecha fecha2 (f1);
		fecha2.mostrar ();
		if (banda = fecha2.validar () == verdadero)
			cout << "\ nEs una fecha valida";
		más
			cout << "\ nEs una fecha no valida" << endl; * /
	   
		descanso;
	caso 2:
		{
		larga f2;
		banda bool;
		cout << "Ingrese la fecha (diamesanio):";
		cin >> f2;
		Fecha fecha3 (f2);
		fecha3.mostrar ();
		if (banda = fecha3.validar () == verdadero)
			cout << "\ nEs una fecha valida";
		más
			cout << "\ nEs una fecha no valida" << endl;
		}
		descanso;
	caso 3:
		{
		int dd, mm, aa;
		banda bool;
		cout << "Ingrese el dia:";
		cin >> dd;
		cout << "\ nIngrese el mes:";
		cin >> mm;
		cout << "\ nIngrese el anio:";
		cin >> aa;
		Fecha fecha1 (dd, mm, aa);
		fecha1.mostrar ();
		banda = fecha1.validar ();
		si (banda == verdadero)
			cout << "\ nEs una fecha valida";
		más
			cout << "\ nEs una fecha no valida" << endl;
		}
		descanso;
	defecto:
		{
		  cout << "ERROR";
		  descanso;
		}
	}
	_getch ();
}



#include "StdAfx.h"
#include "Fecha.h"
#include <iostream>
#include <string>
utilizando namespace std;

Fecha :: Fecha (int _dia, int _mes, int _anio)
{
	dia = _dia;
	mes = _mes;
	anio = _anio;
}
Fecha :: Fecha (cadena f1)
{
	if ((f1.at (2) == '/') && (f1.at (5) == '/'))
	{
		int dia = (atoi (f1.substr (0,2) .c_str ()));
		int mes = (atoi (f1.substr (3,2) .c_str ()));
		int anio = (atoi (f1.substr (6,4) .c_str ()));
	}
}
Fecha :: Fecha (f2 largo)
{
	dia = int (f2 / 1000000);
	mes = int ((f2- (dia * 1000000)) / 10000);
	anio = int ((f2- (dia * 1000000)) - mes * 10000);
}
void Fecha :: mostrar ()
{ 
	cout << dia << "" << mes << "" << anio;
}

bool Fecha :: validar ()
{
	bool K = verdadero;
	if (mes <= 12 && mes> 0) {
			if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12) {
			  si (dia> = 1 && dia <= 31) {
				 devuelve K;
			  }más{
				  K = falso;
			  }
			}más{ 
				if (mes == 4 || mes == 6 || mes == 9 || mes == 11) {
				   si (dia> = 1 && dia <= 30) {
					   devuelve K;
				   }más{
						K = falso;
				   }
				} else {// Febrero
				   si (anio% 4 == 0 && anio% 100! = 100 || anio% 400 == 0) {
					  si (dia> = 1 && dia <= 29) {
						  devuelve K;
					  }más{
						  K = falso;
					  }
				   }más{
					  si (dia> = 1 && dia <= 28) {
							devuelve K;
					  }más{
							K = falso;
					  }
				  
		           }
               }
			}
	}más{
		K = falso;
		devuelve K;
    }
}

Fecha :: ~ Fecha (nula)
{
}

#pragma una vez
#include <string>
utilizando namespace std;
clase Fecha
{
privado:
	int dia, mes, anio;
público:
	Fecha (int _dia, int _mes, int _anio);
	Fecha (cadena f1);
	Fecha (f2 largo);
	void mostrar ();
	bool validar ();
	~ Fecha (nulo);
};
